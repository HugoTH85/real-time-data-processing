input {
  mongodb {
    uri => 'mongodb://mongodb:27017/kafka_topics'  # Remplacez par votre URI MongoDB
    placeholder_db_dir => '/opt/logstash/'  # Répertoire pour les fichiers de position
    collection => 'weather_data'  # Remplacez par le nom de votre collection
    batch_size => 500  # Nombre de documents à récupérer à la fois
    # Vous pouvez ajouter d'autres options si nécessaire
  }
  mongodb {
    uri => 'mongodb://mongodb:27017/kafka_topics'  # Remplacez par votre URI MongoDB
    placeholder_db_dir => '/opt/logstash/'  # Répertoire pour les fichiers de position
    collection => 'stock_data'  # Remplacez par le nom de votre collection
    batch_size => 1  # Nombre de documents à récupérer à la fois
    # Vous pouvez ajouter d'autres options si nécessaire
  }
  # Exemple Deuxième collection
  # mongodb {
  #   uri => 'mongodb://mongodb:27017/kafka_topics'
  #   placeholder_db_dir => '/opt/logstash/'
  #   collection => 'finance_data'  # Une deuxième collection MongoDB
  #   batch_size => 500
  # }
}
filter {
  mutate {
    remove_field => ["_id"]  # Assurez-vous de ne pas inclure ce champ
  }
}

output {
  elasticsearch {
    hosts => ['elasticsearch:9200']  # URI de votre serveur Elasticsearch
    index => 'weather_data'  # Remplacez par le nom que vous souhaitez donner à l'index
    ecs_compatibility => "v1"
  }
  elasticsearch {
    hosts => ['elasticsearch:9200']  # URI de votre serveur Elasticsearch
    index => 'stock_data'  # Remplacez par le nom que vous souhaitez donner à l'index
    ecs_compatibility => "v1"
  }
}
